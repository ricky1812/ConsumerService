spring.application.name=ConsumerService

spring.kafka.consumer.group-id=eventhub-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.listener.missing-topics-fatal=false
spring.kafka.consumer.max-poll-records=100
spring.kafka.consumer.fetch-min-bytes=1
spring.kafka.consumer.fetch-max-wait=500

logging.level.org.springframework.kafka.retrytopic=DEBUG
#logging.level.org.springframework.kafka.listener=DEBUG
#logging.level.org.springframework.retry=DEBUG



server.port=8082
spring.docker.compose.file=../docker-compose.yml

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

management.endpoints.web.exposure.include=health,info,prometheus,metrics
management.endpoint.health.show-details=always
management.server.port=8083

management.prometheus.metrics.export.enabled=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


